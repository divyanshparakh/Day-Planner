version: '3.8'
services:
  frontend:
    container_name: frontend-container
    image: frontend-image
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    expose:
      - ${APP_PORT}
    ports:
      - "${APP_PORT}:${APP_PORT}"
    environment:
      - EXTENRAL_PORT=${APP_PORT}
    env_file:
      - .env
    depends_on:
      - server
    networks:
      - todo_network
    volumes:
      - ./frontend:/app
      - /app/node_modules
  server:
    container_name: server-container
    image: server-image
    build:
      context: ./server/
      dockerfile: Dockerfile
    expose:
      - ${SERVER_PORT}
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      - EXTENRAL_PORT=${SERVER_PORT}
      - PGDATABASE=${DB_DATABASE}
      - PGUSER=${DB_USER}
      - PGPASSWORD=${DB_PASSWORD}
      - PGHOST=database
    env_file:
      - .env
    depends_on:
      - database
    restart: unless-stopped
    networks:
      - todo_network
  database:
    container_name: database-container
    image: "postgres:${POSTGRES_VERSION}-alpine"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
      - PGPORT=${DB_PORT}
    volumes:
      - ./database/postgres-data:/var/lib/postgresql/data
      - ./database/init-scripts:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - todo_network
networks:
  todo_network:
    driver: bridge